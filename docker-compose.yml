version: "3.7"

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    ports:
      - 8080:8080
    environment:
      GIN_MODE: debug # release
      POSTGRES_URI: postgres://user:password@db:5432/db?sslmode=disable
      JWT_SECRET_KEY: jw_secret_key
      RESEND_API_KEY: re_123456
      NoreplyEmail: no-reply@example.com
      ApiHostUrl: https://api.example.com/
      AppHostUrl: https://app.example.com/
      ProjectName: example-app
      OAUTH_GOOGLE_CLIENT_ID: oauth-creds
      OAUTH_GOOGLE_SECRET: oauth-creds
      OAUTH_GITHUB_CLIENT_ID: oauth-creds
      OAUTH_GITHUB_SECRET: oauth-creds
      POSTGRES_OPEN_CONNS: 0
      POSTGRES_IDLE_CONNS: 2
      S3_ACCESS_KEY_ID: minioadmin
      S3_SECRET_ACCESS_KEY: minioadmin
      S3_ENDPOINT: minio
      S3_SECURE: "true"
      S3_BUCKET: base-gopher
      S3_REGION: us-east-1
      STRIPE_API_KEY: api-key
      MONGO_URI: mongodb://localhost:27017

  db:
    # image: postgres:latest
    image: postgres:16.6-bullseye
    # image: pgvector/pgvector:pg16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - 5432:5432
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    ports:
      - 9000:9000
    expose:
      - 9000
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data

  mongo:
    image: mongo:latest
    expose:
      - 27017:27017
    ports:
      - 27017
    volumes:
      - mongo_data:/data/db

  adminer:
    image: adminer
    ports:
      - 8000:8080

volumes:
  postgres_data:
  mongo_data:
